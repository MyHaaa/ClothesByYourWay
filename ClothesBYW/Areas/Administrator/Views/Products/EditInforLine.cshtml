@model Models.EF.ProductLine


<script>
    $(function () {
            $("#@Html.IdFor(s => s.MinimumQuantityAvailable)")
            .on("input",function () {
               
                if ($(this).val() <= 0) {
                    alert("Không được nhỏ hơn hoặc bằng 0 ");
                    $(this).val("");
                }
            });
        });
    $(function () {
            $("#@Html.IdFor(s => s.QuantityInStock)")
            .on("input",function () {

                if ($(this).val() <= 0) {
                    alert("Không được nhỏ hơn hoặc bằng 0 ");
                    $(this).val("");
                }
            });
        });


</script>


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title" style="text-align: center; font-weight: bold; text-transform:uppercase">Chỉnh sửa thông tin dòng sản phẩm @Model.ProductLineID</h4>
</div>
<div class="modal-body">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductLineID)
            @Html.HiddenFor(model => model.ProductID)
            <div class="form-group">
                @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinimumQuantityAvailable, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.MinimumQuantityAvailable, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinimumQuantityAvailable, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SupplierID, "SupplierID", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ColorID, "ColorID", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.DropDownList("ColorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ColorID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.QuantityInStock, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.QuantityInStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuantityInStock, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-10 col-md-2">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
</div>

